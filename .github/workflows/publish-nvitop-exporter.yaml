name: Build and Publish nvitop-exporter Docker Image

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags (e.g., v1.0.0)
  workflow_dispatch:  # Allow manual trigger
    inputs:
      publish:
        description: 'Publish to GHCR'
        type: boolean
        default: true
        required: false

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: nvitop

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: false

permissions:
  contents: read
  packages: write
  id-token: write
  attestations: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.publish == 'true')
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern=exporter-{{version}}
            type=semver,pattern=exporter-{{major}}.{{minor}}
            type=semver,pattern=exporter-{{major}}
            type=raw,value=exporter,enable={{is_default_branch}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build Docker image
        run: |
          docker build -t test-image:latest ./nvitop-exporter

      - name: Test Docker image
        run: |
          docker run --rm test-image:latest --help

      - name: Tag and push Docker image
        if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.publish == 'true')
        run: |
          # Tag the image with all metadata tags
          echo "${{ steps.meta.outputs.tags }}" | while read -r tag; do
            echo "Tagging and pushing: $tag"
            docker tag test-image:latest "$tag"
            docker push "$tag"
          done
