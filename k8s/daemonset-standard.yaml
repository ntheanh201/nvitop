apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nvitop-exporter
  namespace: monitoring
  labels:
    app: nvitop-exporter
    component: gpu-monitoring
spec:
  selector:
    matchLabels:
      app: nvitop-exporter
  template:
    metadata:
      labels:
        app: nvitop-exporter
        component: gpu-monitoring
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      hostNetwork: true
      hostPID: true
      nodeSelector:
        # Only deploy on nodes with GPUs
        gpu: "on"
      containers:
        - name: nvitop-exporter
          image: ghcr.io/ntheanh201/nvitop:exporter
          securityContext:
            privileged: true
            runAsUser: 0
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: true
          terminationMessagePath: /tmp/termination-log
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              hostPort: 8080
              name: metrics
              protocol: TCP
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: KUBERNETES_SERVICE_HOST
              value: "kubernetes.default.svc"
            - name: KUBERNETES_SERVICE_PORT
              value: "443"
          args:
            - "--bind-address=0.0.0.0"
            - "--port=8080"
            - "--interval=10"
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "200m"
          volumeMounts:
            - name: dev
              mountPath: /dev
              readOnly: true
            - name: proc
              mountPath: /host/proc
              readOnly: true
            - name: sys
              mountPath: /host/sys
              readOnly: true
            - name: nvidia-ml
              mountPath: /usr/lib/x86_64-linux-gnu/libnvidia-ml.so.1
              readOnly: true
            # Standard Kubernetes container runtime mounts
            - name: docker-sock
              mountPath: /var/run/docker.sock
              readOnly: true
            - name: containerd-sock
              mountPath: /run/containerd/containerd.sock
              readOnly: true
            - name: containerd-data
              mountPath: /var/lib/containerd
              readOnly: true
            - name: docker-data
              mountPath: /var/lib/docker
              readOnly: true
          livenessProbe:
            httpGet:
              path: /metrics
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /metrics
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
      volumes:
        - name: dev
          hostPath:
            path: /dev
        - name: proc
          hostPath:
            path: /proc
        - name: sys
          hostPath:
            path: /sys
        - name: nvidia-ml
          hostPath:
            path: /usr/lib/x86_64-linux-gnu/libnvidia-ml.so.1
            type: File
        # Standard Kubernetes runtime volumes
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
            type: Socket
        - name: containerd-sock
          hostPath:
            path: /run/containerd/containerd.sock
            type: Socket
        - name: containerd-data
          hostPath:
            path: /var/lib/containerd
            type: Directory
        - name: docker-data
          hostPath:
            path: /var/lib/docker
            type: Directory
      serviceAccountName: nvitop-exporter
      restartPolicy: Always
      dnsPolicy: ClusterFirstWithHostNet
